#version 450
layout(triangles, equal_spacing, ccw) in;



// received from Tessellation Control Shader - all texture coordinates for the patch vertices
in vec2 TextureCoord[];
in vec3 csPos[];

out vec2 TexCoord;

uniform sampler2D waveParticle;

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;


vec3 interpolate3D(vec3 v0, vec3 v1, vec3 v2)
{
    return vec3(gl_TessCoord.x) * v0 + vec3(gl_TessCoord.y) * v1 + vec3(gl_TessCoord.z) * v2;
} 


void main()
{
	TexCoord = (gl_TessCoord.x * TextureCoord[0]) + (gl_TessCoord.y * TextureCoord[1]) + (gl_TessCoord.z * TextureCoord[2]); 	
	vec3 pos = (gl_TessCoord.x * csPos[0]) + (gl_TessCoord.y * csPos[1]) + (gl_TessCoord.z * csPos[2]); 
 	
	float height = texture(waveParticle, TexCoord).r;
	pos += vec3(0, 0.4, 0);

	gl_Position = projection * view * model * vec4(pos.xyz, 1.0);
}